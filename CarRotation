using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CarRotation : MonoBehaviour {

	public CollisionCheck colliderObj;
	private Rigidbody car_rb;
	float currRotationX;
	float currRotationY;
	float currRotationZ;
	float rotationSpeed = 1.0f;
	bool isColliding = true;
    RaycastHit hit;
    float maxRayDistance = 100f;

	void Awake () {
		car_rb = GetComponent<Rigidbody>();
	}
	
	void Update () {
		currRotationX = car_rb.transform.eulerAngles.x;
		currRotationY = car_rb.transform.eulerAngles.y;
		currRotationZ = car_rb.transform.eulerAngles.z;
		isColliding = colliderObj.getIsColliding();

        if (!isColliding)
        {
            //if (Physics.Raycast(transform.position, -transform.up, out hit, maxRayDistance))
            //{
            //    if (hit.collider.CompareTag("RacingTrack") || hit.collider.CompareTag("GravTrack")) {
            //        float angle = Vector3.Angle(hit.normal, transform.position);
            //        currRotationX = Mathf.LerpAngle(currRotationX, angle, rotationSpeed * Time.deltaTime);
            //        currRotationZ = Mathf.LerpAngle(currRotationZ, angle, rotationSpeed * Time.deltaTime);

            //        Quaternion currRotation = Quaternion.Euler(currRotationX, currRotationY, currRotationZ);
            //        transform.rotation = currRotation;
            //    }
            //}

            currRotationX = Mathf.LerpAngle(currRotationX, 0, rotationSpeed * Time.deltaTime);
            currRotationZ = Mathf.LerpAngle(currRotationZ, 0, rotationSpeed * Time.deltaTime);

            Quaternion currRotation = Quaternion.Euler(currRotationX, currRotationY, currRotationZ);
            transform.rotation = currRotation;


        }
	}
}
